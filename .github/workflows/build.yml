name: Build Hackzilla APK v2

on:
  workflow_dispatch:
    inputs:
      server_url:
        description: 'Sunucu URL (örnek: http://192.168.1.145:5000/get_command)'
        required: true
        default: 'http://192.168.1.145:5000/get_command'

jobs:
  build_apk:
    runs-on: ubuntu-latest

    steps:
      - name: Kod deposunu klonla
        uses: actions/checkout@v3

      - name: Python 3.10 kur
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: pip güncelle
        run: |
          python -m pip install --upgrade pip

      - name: Gerekli paketleri kur
        run: |
          sudo apt update
          sudo apt install -y build-essential git zip unzip openjdk-11-jdk python3-pip python3-setuptools python3-wheel libncurses-dev libffi-dev libssl-dev libsqlite3-dev zlib1g wget

      - name: Python bağımlılıklarını kur
        run: |
          pip install buildozer cython

      - name: Android cmdline-tools indir
        run: |
          mkdir -p $HOME/.android/cmdline-tools
          cd $HOME/.android/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip
          mv cmdline-tools latest

      - name: ANDROID_HOME ayarla
        run: |
          echo "ANDROID_HOME=$HOME/.android" >> $GITHUB_ENV
          echo "$HOME/.android/cmdline-tools/latest/bin" >> $GITHUB_PATH

      - name: SDK lisanslarını kabul et ve gerekli paketleri indir
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-33" "build-tools;36.0.0"

      - name: Buildozer init (eğer gerekliyse)
        run: |
          if [ ! -f buildozer.spec ]; then
            buildozer init
          fi

      - name: APK oluştur
        run: |
          buildozer -v android debug

      - name: APK dosyasını yükle
        uses: actions/upload-artifact@v4
        with:
          name: hackzilla-apk
          path: bin/*.apk
